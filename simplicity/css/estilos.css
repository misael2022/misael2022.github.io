/* Alteração do Box Model */
*, *::after, *::before { box-sizing: border-box;}

/* Tamanho base para medida REM */
html { font-size: 14px;}

body { 
    background-color: whitesmoke;
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;

    /* Solução do problema do rodapé:
    Etapa 1: colocar o Body em em modo flex e definir altura usando a viewport como referência */
    display: flex;

    /* reorganiza em colunas */
    flex-direction: column;

    /* Body ocupa toda a tela */
    min-height: 100vh;
}

/* Etapa 2: fazer o conteúdo (main) ocupar todo o espaço necessário para empurrar o rodapé para baixo */
main { flex: 1;}

img { max-width: 100%;}

/* Reset de elementos */
body, h1, h2, h3, p, figure {
    margin: 0;
    padding: 0;
}

h1 {
    font-family: Arial, Helvetica, sans-serif;
    font-size: 1.5rem;
    font-weight: bold;
}

a {text-decoration: none;}

h1 a {
    color: white;
    background-color: black;
    border-radius: 5px;
    padding: 0.3rem 1rem;
}

header {
    background-color: whitesmoke;
    text-transform: uppercase;
    position: sticky;
    top: 0;
    border-radius: 3px;
}

/* Regra para um elemento (no caso, uma div) com a classe limitador E dentro do header.
Importante: o flex configurado aqui funcionará SOMENTE para a primeira classe limitador aplicada na div dentro do header.
Além disso, ela também estará recebendo max-width e margin vindos da classe */
header .limitador{
    display: flex;
    justify-content: space-between;
    align-items: center;
    height: 10vh;
}

/* Regra para QUALQUER elemento com a classe limitador */
.limitador {
    max-width: 1100px;
    margin: auto;
    width: 95%;
}

nav h2 {text-align: right;}
nav h2 a {
    color: black;
    font-size: 1rem;
    padding: 1rem;
    border-radius: 1rem;
    display: inline-block;
}

nav h2 a:hover,
nav h2 a:focus,
.links-menu a:hover,
.links-menu a:focus {
    background-color: gainsboro;
}

.links-menu {
    list-style-type: none;
    padding: 0;
    margin: 0;
    /* Esta prorpiedade será usada posteriormente para esconder a lista */
    display: none;
}

.links-menu a {
    color: black;
    font-weight: bold;
    height: 50px;
    border-radius: 1rem;

    /* Links são inline, não tem espaço para alinhamento pois só ocupam o espaço do conteúdo. Display flex transforma em block. */
    display: flex;
    justify-content: center;
    align-items: center;
}

/* Só funciona se as duas classes estivem juntas, do contrário nada acontece. Seletor fechado.
Links-menu e Aberto.

Obs.: esta regra será aplicada posteriormente com o auxílio de programação JavaScript. */
.links-menu.aberto {
    /* Usamos o flex para voltar a exibir o nemo quando aberto */
    display: flex;

    /* Volta a organizar em coluna */
    flex-direction: column;

    /* Usamos position e coordenadas para garantir o posicionamento correto do menu quando aberto. */
    position: absolute;
    right: 0;
    left: 0;
}

.destaque {
    background-image: url(../imagens/fundo-destaque.jpg);
    color: white;

    /* VH - Viewport de altura ou VW - Viewport de largura, leva em consideração o tamanho da tela útil do dispositivo. */
    height: 90vh;
    background-size: cover;
    background-attachment: fixed;
    text-align: center;

    display: flex;
    flex-wrap: wrap;
    justify-content: center;

    /* ALinha tudo (h2 e p) ao centro */
    align-content: center;
}

/* Tamanho para o wrap (quebra de linha) funcione */
.destaque h2,
.destaque p {
    width: 100%;
}

.destaque h2 {
    /* Fonte responsiva usando função clamp(mínimo, ideal, máximo) */
    font-size: clamp(2rem, 10vw, 7rem);

    /* Etapa 2: chamar e configurar a animação */
    animation-name: aparecer;
    animation-duration: 2s;
    /* animation-iteration-count: infinite; */
    /* animation-direction: alternate-reverse; */
}
.destaque p {
    font-size: clamp(1.2rem, 3vw, 4rem);

    /* Sintaxe COMPLETA */
    /* animation-name: aparecer;
    animation-duration: 2s;
    animation-delay: 0.7s;
    animation-fill-mode: backwards; */

    /* Sintaxe ABREVIADA */
    animation: aparecer 2s 0.7s backwards;

}

/* Etapa 1: Regra de animação */
/* @Keyframes -> quadros-chave */
@keyframes aparecer { 
    from {
        opacity: 0;
        transform: translateY(-30vh);

    }
    to {
        opacity: 1;
    
    }
}

.front-end,
.historia,
.localizacao {
    text-align: center;
}

article h2 { padding: 1rem;}

/*  Primeiro valor: em cima, embaixo;
    Segundo valor: Esquerda, direita. */
article p { padding: 0.5rem 0; }

.historia {
    background-image: url(../imagens/fundo-madeira.jpg);
    background-attachment: fixed;
    background-size: cover;
}

.historia h2 {
    color: white;
    text-shadow: black 1px 1px 5px;
}

.historia iframe {
    width: 100%;
    max-width: 700px;
}

footer {
    background-color: black;
    color: white;
    height: 15vh;
    font-weight: bold;
    display: flex;
    justify-content: center;
    align-items: center;
    text-align: center;
}

/* Regras para o conteúdo das páginas:
Produtos, Serviçõs e Contato */
.conteudo {
    background-color: rgb(236, 236, 236);
    
    /* Qualquer valor abaixo de 1 pode ignorar o zero à esquerda */
    padding: .7rem;
    border-radius: 7px;
}

.conteudo h2 {text-align: center;}

table, th, td {
    border: solid 2px black;

    /* Remove espaços entre as bordas */
    border-collapse: collapse;
}

table {
    width: 80%;
    margin: auto;
    max-width: 600px;
}

caption {
    font-weight: bold;
    font-size: 1.1rem;
    padding-bottom: 5px
}
th {
    background-color: black;
    color: white;
    font-size: 1.1rem;
    padding: .5rem;
}

td {
    /* background-color: white; */
    font-size: 1.1rem;
}

/* Se refere a última coluna da tabela */
td:last-child {
    font-weight: bold;
    text-align: right;
    padding-right: 5px;
}


/* PSEUDOCLASSES começam com : "dois pontos" */


/* Formatando os primeiros td's */
td:first-child {text-transform: uppercase;}

/* Formatando uma coluna específica (2) */
td:nth-child(2) {text-align: center;}

/* even: par  -  odd: ímpar */
tr:nth-child(odd) { background-color: rgb(204, 204, 204);}

form {
    width: 95%;
    margin: auto;
    padding: 1rem;
    border-radius: 10px;
}

/* Pseudoclasse NOT cria uma EXCEÇÃO para determinadas regras.
Abaixo, estamos pegando todos os inputs exceto os do tipo radio e checkbox. */
input:not([type=radio]):not([type=checkbox]),
select,
textarea {
    border: none;
    padding: 1%;
    width: 100%;
    height: 40px;
}

textarea {height: auto;}

button {
    background-color: black;
    color: white;
    border: none;
    padding: 1rem;
    font-weight: bold;
}









/* //////////////////// **  MEDIA QUERY - No fim do cód como boas práticas ** //////////////////// */

@media screen and (min-width: 530px) {
    nav {
        /* background-color: yellow; */
        width: 70%;
    }
    nav h2 { display: none;}
    .links-menu {display: flex;}

    .links-menu li {
        width: 100%;
    }
}

@media screen and (min-width: 800px) {
    html {font-size: 18px;}
    header .limitador { height: 15vh;}
    .destaque { height: 85vh;}
}